# Loon 进阶配置
# Date: 2023-11-20 15:57:16
# Author: https://t.me/iKeLee

[General]
ipv6 = true
dns-server = 223.5.5.5,223.6.6.6
# 阿里云DoH
doq-server = quic://223.5.5.5:853,quic://223.6.6.6:853
# 允许 wifi 访问
disable-udp-ports = 443
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# 节点延迟测试，proxy-test-url指定的网址进行相应测试，以确认节点的可用性，以下选一个就行
proxy-test-url = http://cp.cloudflare.com/generate_204
#proxy-test-url = http://www.qualcomm.cn/generate_204
#proxy-test-url = http://www.apple.com/library/test/success.html
test-timeout = 2
# 接口模式
interface-mode = auto
sni-sniffing = true
disable-stun = false
disconnect-on-policy-change = true
switch-node-after-failure-times = 3
resource-parser = https://gitlab.com/sub-store/Sub-Store/-/releases/permalink/latest/downloads/sub-store-parser.loon.min.js
geoip-url = https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,e.crashlynatics.com
# 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
# Real-Ip
real-ip = *.iCloud.com, *.apple.com, *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com, msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net
# 旁路隧道
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,239.255.255.250/32,255.255.255.255/32

[Proxy]




[Remote Proxy]



[Proxy Group]
# --------------------------------
# 常用节点选择
全球加速 = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
Netflix = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix_Letter.png
YouTube = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
Telegram = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
Google = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
Spotify = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/spotify.png
Apple = select,DIRECT,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/apple(1).png
Microsoft = select,DIRECT,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/microsoft.png
TikTok = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/tiktok.png
ChatGPT = select,全球手动,香港延时优选,台湾延时优选,日本延时优选,韩国延时优选,新国延时优选,美国延时优选,img-url = https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/ChatGPT-green.png
# --------------------------------
# 手动
游戏手动 = select,游戏节点,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png
全球手动 = select,全球节点,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
# --------------------------------
# 自动
# 延时优选
香港延时优选 = url-test,香港节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
台湾延时优选 = url-test,台湾节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
日本延时优选 = url-test,日本节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
韩国延时优选 = url-test,韩国节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
新国延时优选 = url-test,新国节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
美国延时优选 = url-test,美国节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png


# --------------------------------

[Remote Filter]
游戏节点 = NameRegex, FilterKey = "^(?=.*((?i)游戏|🎮|(\b(GAME)\d{0,2}\b)))(?!.*((?i)回国|校园)).*$"
全球节点 = NameRegex, FilterKey = "^(?=.*(.*))(?!.*((?i)邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|到期|过期|已用|联系|邮箱|工单|群|贩卖|通知|倒卖|防止|国内|🎮|(\b(GAME|USE|USED|TOTAL|EXPIRE|EMAIL|Panel)\d{0,2}\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$"
香港节点 = NameRegex, FilterKey = "^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
台湾节点 = NameRegex, FilterKey = "^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
日本节点 = NameRegex, FilterKey = "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
韩国节点 = NameRegex, FilterKey = "^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
新国节点 = NameRegex, FilterKey = "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
美国节点 = NameRegex, FilterKey = "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\d{0,2}\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"


[Rule]
# Type:DOMAIN-SUFFIX, DOMAIN, DOMAIN-KEYWORD, USER-AGENT, URL-REGEX, IP-CIDR
# Strategy:DIRECT, PROXY, REJECT
# Options:no-resolve(only for cidr)
# IP-CIDR, 192.168.0.0/16, DIRECT
# IP-CIDR, 10.0.0.0/8, DIRECT
# IP-CIDR, 172.16.0.0/12, DIRECT
# IP-CIDR, 127.0.0.0/8, DIRECT
# 京东
DOMAIN-SUFFIX,jd.com,DIRECT
GEOIP,CN,DIRECT
FINAL,全球加速

[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising.list, policy=REJECT, tag=Anti-AD, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, policy=TikTok, tag=TikTok, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, policy=ChatGPT, tag=ChatGPT, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=Apple ID, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AppStore/AppStore.list, policy=Apple, tag=App Store, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=全球加速, tag=GitHub, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, policy=Netflix, tag=Netflix, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=Youtube, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Disney/Disney.list, policy=全球加速, tag=Disney, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, policy=Google, tag=Google, enabled=true

# 👇Host
# 可以指定一下四种模式：
# 1、指定域名使用对应的IP地址
# 2、将域名指向另一个域名
# 3、指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
# 4、指定具体的SSID环境下使用特定的DNS服务器
[Host]

#======================================#
# 👇本地重写
[Rewrite]
# Google搜索引擎防跳转的重写
^https?:\/\/(www.)?(g|google)\.cn 302 https://www.google.com

#======================================#
# 👇本地脚本
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# generic  通用型脚本，可用在操作节点/策略组中，执行是会带入节点名称和策略组名称，脚本必须在开启NE时
[Script]
cron "0 8-23/2 * * *" script-path=https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/caiyun.js, timeout=10, tag=彩云天气推送


#======================================#
# 👇插件资源
[Plugin]
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/MediaChecker.plugin, tag=流媒体解锁查询, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/cdzs.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/caiyun.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/biliad.plugin, enabled=false
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/Netflix.beta.plugin, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/YouTubeAds.plugin, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/MediaCheck.plugin, enabled=true
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, enabled=true
https://raw.githubusercontent.com/BiliUniverse/ADBlock/main/modules/BiliBili.ADBlock.plugin, enabled=false
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=全球加速, enabled=true
https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/Loon.plugin, enabled=true

#======================================#
#########################################
# ca-passphrase和ca-p12代为证书&主机名部分，可去UI界面自行生成并安装证书，会在此生成对应信息，也可在更新配置前可把旧的配置中ca-passphrase和ca-p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书。
# 👇中间人攻击，证书，主机名
[Mitm]
#hostname
hostname =
ca-p12 = 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
ca-passphrase = F63N9G9F
skip-server-cert-verify = false
enable = true